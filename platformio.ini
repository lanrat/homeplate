[platformio]
default_envs = inkplate10
; set the below to add an "include" dir to the build path
include_dir =

[inkplate_defaults]
; default environments for inkplate devices
platform = espressif32
framework = arduino
monitor_speed = 115200
board = esp32dev
; CPU Frequency. Max for ESP32: 240000000L
board_build.f_cpu = 240000000L
board_build.partitions = min_spiffs.csv ; use SD card for storage and use the rest of flash for larger apps

; Until there is a specific Inkplate10 board definition we need to ensure
; ARDUINO_ESP32_DEV is not set, as it will be always prioritized by the library
; thinking it is an Inkplate 6 (which still has this board name for BC reasons).
build_unflags =
  -DARDUINO_ESP32_DEV

lib_deps =
  ; LIB @ [^]VERSION ('^' means latest version with same major version number)
  ; 1.2.3 - an exact version number. Use only this exact version
  ; ^1.2.3 - any compatible version (exact version for 1.x.x versions)
  ; ~1.2.3 - any version with the same major and minor versions, and an equal or greater patch version
  ; >1.2.3 - any version greater than 1.2.3. >=, <, and <= are also possible
  ; >0.1.0,!=0.2.0,<0.3.0 - any version greater than 0.1.0, not equal to 0.2.0 and less than 0.3.0
  
  https://github.com/SolderedElectronics/Inkplate-Arduino-library#10.0.0
  arduino-libraries/NTPClient @ 3.2.1 ; NTP client
  fbiego/ESP32Time @ 2.0.6 ; for syncing RTC to internal clock
  jchristensen/Timezone @ 1.2.4 ; for timezone and DST calculations
  ricmoo/QRCode @ 0.0.1 ; for QR code
  marvinroger/AsyncMqttClient @ 0.9.0 ; FOR MQTT
  bblanchon/ArduinoJson @ 7.1.0 ; for JSON

; set the default target to compile, upload, and monitor
targets = upload, monitor
monitor_filters = time, esp32_exception_decoder, default

build_flags =
  -DBOARD_HAS_PSRAM
  -mfix-esp32-psram-cache-issue
  -DCONFIG_FREERTOS_CHECK_STACKOVERFLOW_PTRVAL
    ; sets configCHECK_FOR_STACK_OVERFLOW = 1, helps detect stack overflows

[env:inkplate10]
; settings for inkplate10
extends = inkplate_defaults
build_flags =
  ${inkplate_defaults.build_flags}
  -DARDUINO_INKPLATE10

[env:inkplate10v2]
; settings for inkplate10v2
extends = inkplate_defaults
build_flags =
  ${inkplate_defaults.build_flags}
  -DARDUINO_INKPLATE10V2

[env:debug]
extends = inkplate_defaults
build_type = debug
build_flags =
  ${inkplate_defaults.build_flags}
  -DARDUINO_INKPLATE10 ; change if debugging another board
  -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG
    ; build_type = debug
    ; debug levels
    ; ARDUHAL_LOG_LEVEL_NONE
    ; ARDUHAL_LOG_LEVEL_ERROR
    ; ARDUHAL_LOG_LEVEL_WARN  *default*
    ; ARDUHAL_LOG_LEVEL_INFO
    ; ARDUHAL_LOG_LEVEL_DEBUG
    ; ARDUHAL_LOG_LEVEL_VERBOSE


[env:ota]
; TODO: migrate this to a custom target
extends = env:inkplate10 ; change if using another board
targets = upload
; for OTA
; host machine much be reachable from ESP
; might need to set partitions sometime
upload_port = homeplate.local ; change this to your device's name/IP
upload_protocol = espota
upload_flags =
  --host_port=8266 ; this port must be allowed through the firewall from the ESP to this computer


[env:vcom]
; if using a different device be sure to change the extended environment
extends = env:inkplate10
lib_deps =
  e-radionicacom/InkplateLibrary#7.0.0
build_src_filter= -<*> +<../vcom_src/>

[env:native]
platform = native
build_flags = -std=gnu++11
lib_deps =
  ArduinoFake
